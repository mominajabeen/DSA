using namespace std;

#include <algorithm>
#include <iostream>
#include <vector>

class Solution {
public:
  static vector<vector<int>> searchTriplets(vector<int> &arr) {
    vector<vector<int>> triplets;
    sort(arr.begin(), arr.end());
    for(int i = 0; i < arr.size()-2; i++){
      if(i > 0 && arr[i] == arr[i - 1])
        continue;
      
      searchPair(arr, -arr[i], i + 1, triplets);
    }
    return triplets;
  }
private:
  static void searchPair(const vector<int> &arr, 
  int targetSum, int left, vector<vector<int>> &triplets){

  int right = arr.size() - 1;
  while(left < right){
    int currSum = arr[left] + arr[right];
    if(currSum == targetSum){
      triplets.push_back({-targetSum, arr[left], arr[right]});
      left++;
      right--;

      while(left < right && arr[left] == arr[left - 1]){
        // skip same elements to avoid duplicate triplets
        left++;
      }
      while(left < right && arr[right] == arr[right + 1]){
        //skip same elements to avoid duplicate triplets
        right--;
      }
    }
    else if(currSum < targetSum){
      // we need a pair with larger sum
      left++;
    }
    else
    // we need a pair with bigger currSum
      right--;
  }
}
};

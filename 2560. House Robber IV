class Solution {
public:
    int minCapability(vector<int>& nums, int k) {
        int left = *min_element(nums.begin(), nums.end());
        int right = *max_element(nums.begin(), nums.end());
        
        while(left < right){
            int mid = left + (right - left)/2;
            if(canSteal_k_houses(nums, k, mid))   right = mid;
            else    left = mid + 1;
        }
        return left;
    }
private:
    bool canSteal_k_houses(vector<int>& nums, int k, int capability){
        int count = 0;
        int i = 0;
        while(i < nums.size()){
            if(nums[i] <= capability){
                i += 2;
                count++;
            }
            else    i++;
        }
        return count >= k;
    }
};

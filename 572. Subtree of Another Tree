/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(subRoot == nullptr)    return true;
        if(root == nullptr)   return false;

        if(isSame(root, subRoot))   return true;

        return (isSubtree(root->left, subRoot) or isSubtree(root->right, subRoot));
    }
private:
    bool isSame(TreeNode* r1, TreeNode* r2){
        if(!r1 && !r2)  return true;
        if(!r1 or !r2)  return false;

        if(r1->val != r2->val)  return false;

        return (isSame(r1->left, r2->left) && isSame(r1->right, r2->right)); 
    }
};

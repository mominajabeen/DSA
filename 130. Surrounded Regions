class Solution {
public:
    void solve(vector<vector<char>>& board) {
       
        int ROWS = board.size(), COLS = board[0].size();

        for(int r = 0; r < ROWS; r++){
            dfs(board, r, 0, ROWS, COLS);
            dfs(board, r, COLS - 1,ROWS, COLS);
        }
        for(int c = 0; c < COLS; c++){
            dfs(board, 0, c, ROWS, COLS);
            dfs(board, ROWS - 1, c, ROWS, COLS);
        }
        for(int r = 0; r < ROWS; r++){
            for(int c = 0; c < COLS; c++){
                if(board[r][c] == 'O')   board[r][c] = 'X';
                if(board[r][c] == 'E')     board[r][c] = 'O';
            }
        }
    }
    void dfs(vector<vector<char>>& board, int r, int c, int ROWS, int COLS){
        if(r < 0 or r >= ROWS or c < 0 or c >= COLS or board[r][c] != 'O')
            return;
        board[r][c] = 'E';

        dfs(board, r + 1, c, ROWS, COLS);
        dfs(board, r - 1, c, ROWS, COLS);
        dfs(board, r, c + 1, ROWS, COLS);
        dfs(board, r, c - 1, ROWS, COLS);
    }
};

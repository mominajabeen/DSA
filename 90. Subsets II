class Solution {
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> res;
        vector<int> subset;
        sort(nums.begin(), nums.end());
        dfs(nums, res, 0, subset);
        return res;
    }
private:
    void dfs(vector<int>& nums, vector<vector<int>>& res, int i, vector<int> subset){
        if(i == nums.size()){
            res.push_back(subset);
            return;
        }
        subset.push_back(nums[i]);
        dfs(nums, res, i+1, subset);

        subset.pop_back();

        while(i+1 < nums.size() && nums[i] == nums[i+1]){
            i++;
        }
        dfs(nums, res, i+1, subset);
    }
};

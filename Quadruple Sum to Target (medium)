using namespace std;

#include <algorithm>
#include <iostream>
#include <vector>

class Solution {
public:
  static vector<vector<int>> searchQuadruplets(vector<int> &arr, int target) {
    vector<vector<int>> quadruplets;
    sort(arr.begin(), arr.end());
    for(int i = 0; i < arr.size() - 3; i++){
      if(i > 0 && arr[i] == arr[i - 1])   continue;

      for(int j = i + 1; j < arr.size() - 2; j++){
        if(j > i + 1 && arr[j] == arr[j - 1]) continue;

        searchPairs(arr, target, i, j, quadruplets);
      }
    }
    return quadruplets;
  }
private:
  static void searchPairs(vector<int> &arr, int target, int first,
  int second, vector<vector<int>> &quadruplets){
    int left = second + 1;
    int right = arr.size() - 1;

    while(left < right){
      long long sum = static_cast< long long> (arr[first] +
      arr[second] + arr[left] + arr[right]);
      if(sum == target){
        quadruplets.push_back({arr[first], arr[second], arr[left], arr[right]});
        left++;
        right--;
        while(left < right && arr[left] == arr[left - 1]){
          left++;
        }
        while(left < right && arr[right] == arr[right + 1]){
          right--;
        }
      }
      else if(sum < target) left++;
      else right--;
    }
  }  
};

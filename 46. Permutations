class Solution {
    vector<vector<int>> res;
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<bool> pick(nums.size(), false);
        vector<int> perm;
        backTracking(nums, perm, pick);
        return res;
    }
    void backTracking(vector<int>& nums, vector<int>& perm, vector<bool>& pick){
        if(perm.size() == nums.size()){
            res.push_back(perm);
            return;
        }
        for(int i = 0; i < nums.size(); i++){
            if(!pick[i]){
                perm.push_back(nums[i]);
                pick[i] = true;
                backTracking(nums, perm, pick);
                perm.pop_back();
                pick[i] = false;
            }
        }
    }
};
